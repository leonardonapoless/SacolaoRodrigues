import { initHeaderActions } from './headerActions.js';

const produtos = {
  frutas: [
    { id: 'f1', nome: "Limão", preco: "R$2,25 /kg", imagem: "assets/images/product-image/limao.png", quantidade: 0, cor: "#ecf0bd" },
    { id: 'f2', nome: "Maçã", preco: "R$9,98 /kg", imagem: "assets/images/product-image/maca.png", quantidade: 0, cor: "#efb3ae" },
    { id: 'f3', nome: "Morango", preco: "R$12,90 | 250g", imagem: "assets/images/product-image/morango.png", quantidade: 0, cor: "#ee9a9e" },
    { id: 'f4', nome: "Abacate", preco: "R$2,25 /kg", imagem: "assets/images/product-image/abacate.png", quantidade: 0, cor: "#92BA31" },
    { id: 'f5', nome: "Abacaxi", preco: "R$2,25 /kg", imagem: "assets/images/product-image/abacaxi.png", quantidade: 0, cor: "#FEEC9D" },
    { id: 'f6', nome: "Uva", preco: "R$7,90 /kg", imagem: "assets/images/product-image/uva.png", quantidade: 0, cor: "#c5a3cc" },
    { id: 'f7', nome: "Banana", preco: "R$3,99 /kg", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#fef3a5" },
    { id: 'f8', nome: "Coco", preco: "R$4,00 /un", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#f7e7c1" }
  ],
  legumes: [
    { id: 'l1', nome: "Cenoura", preco: "R$3,50 /kg", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#ffcc99" },
    { id: 'l2', nome: "Batata", preco: "R$2,80 /kg", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#f1e1b0" },
    { id: 'l3', nome: "Abobrinha", preco: "R$4,00 /kg", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#bfe2b0" },
    { id: 'l4', nome: "Chuchu", preco: "R$2,30 /kg", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#ccf1b0" }
  ],
  verduras: [
    { id: 'v1', nome: "Alface", preco: "R$1,99 /un", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#c3e6cb" },
    { id: 'v2', nome: "Couve", preco: "R$2,50 /maço", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#a8d5a2" },
    { id: 'v3', nome: "Rúcula", preco: "R$2,00 /maço", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#b0e5b4" }
  ],
  outros: [
    { id: 'o1', nome: "Mel", preco: "R$15,00 /500ml", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#f0c16a" },
    { id: 'o2', nome: "Gengibre", preco: "R$6,00 /kg", imagem: "https://placehold.co/100x100", quantidade: 0, cor: "#e9d4a5" }
  ]
};

const produtosPorId = {};
for (const categoria in produtos) {
  if (produtos.hasOwnProperty(categoria) && Array.isArray(produtos[categoria])) {
    produtos[categoria].forEach(produto => {
      produtosPorId[produto.id] = produto;
    });
  }
}

produtos.todos = [];
for (const categoria in produtos) {
  if (produtos.hasOwnProperty(categoria) && Array.isArray(produtos[categoria]) && categoria !== 'todos') {
    produtos.todos.push(...produtos[categoria]);
  }
}

let categoriaAtual = 'frutas';

function renderProducts(categoria) {
  const container = document.getElementById('product-container');
  if (!container) return;
  
  container.innerHTML = '';

  produtos[categoria].forEach(produto => {
    const div = document.createElement('div');
    div.className = 'product';
    div.style.backgroundColor = produto.cor;
    div.innerHTML = `
      <img src="${produto.imagem}" alt="${produto.nome}">
      <div class="product-title">${produto.nome}</div>
      <div class="price">${produto.preco}</div>
      <div class="quantity-controls">
        <button onclick="window.alterarQuantidade('${produto.id}', -1)">-</button>
        <span id="quant-${produto.id}">${produto.quantidade}</span>
        <button onclick="window.alterarQuantidade('${produto.id}', 1)">+</button>
      </div>
    `;
    container.appendChild(div);
  });
}

function filtrarProdutos(categoria) {
  categoriaAtual = categoria;
  const container = document.getElementById('product-container');
  if (!container) return;
  
  container.classList.add('fade-out');

  setTimeout(() => {
    renderProducts(categoria);
    container.classList.remove('fade-out');
    container.classList.add('fade-in');

    setTimeout(() => {
      container.classList.remove('fade-in');
    }, 400);
  }, 300);
}

function setActiveCategory(categoryName) {
  const categoriaBtns = document.querySelectorAll('.categoria-btn');
  categoriaBtns.forEach(btn => {
    if (btn.textContent.trim().toLowerCase() === categoryName.toLowerCase()) {
      btn.classList.add('active');
    } else {
      btn.classList.remove('active');
    }
  });
  filtrarProdutos(categoryName.toLowerCase());
}

function showCategory(categoria) {
  setActiveCategory(categoria);
  const carrinho = document.getElementById('carrinho');
  if (carrinho) carrinho.style.display = 'none';
}

function toggleMenu() {
  const categoriaMenu = document.getElementById('categoriaMenu');
  if (!categoriaMenu) return;
  
  const categoriaBtns = categoriaMenu.querySelectorAll('.categoria-btn');
  const isOpen = categoriaMenu.classList.toggle('show');

  if (isOpen) {
    categoriaBtns.forEach((btn, index) => {
      btn.classList.remove('animate-in');
      void btn.offsetWidth;
      btn.style.setProperty('--animation-delay', `${index * 0.08}s`);
      btn.classList.add('animate-in');
    });
  } else {
    categoriaBtns.forEach(btn => {
      btn.classList.remove('animate-in');
      btn.style.removeProperty('--animation-delay');
    });
  }
}

window.addEventListener('resize', () => {
  const categoriaMenu = document.getElementById('categoriaMenu');
  if (categoriaMenu) {
    const categoriaBtns = categoriaMenu.querySelectorAll('.categoria-btn');
    if (window.innerWidth >= 769) {
      categoriaMenu.classList.remove('show');
      categoriaBtns.forEach(btn => {
        btn.classList.remove('animate-in');
        btn.style.removeProperty('--animation-delay');
      });
    }
  }

  const navbarMenu = document.getElementById('opcaoMenu');
  if (navbarMenu) {
    const navbarBtns = navbarMenu.querySelectorAll('.opcao-btn');
    if (window.innerWidth >= 769) {
      navbarMenu.classList.remove('show');
      navbarBtns.forEach(btn => {
        btn.classList.remove('animate-in');
        btn.style.animationDelay = '';
      });
    }
  }
});

function toggleMenuNavbar() {
  const navbarMenu = document.getElementById('opcaoMenu');
  if (!navbarMenu) return;
  
  const menuBtns = navbarMenu.querySelectorAll('.opcao-btn');
  const isOpen = navbarMenu.classList.toggle('show');

  if (isOpen) {
    menuBtns.forEach((btn, index) => {
      btn.classList.remove('animate-in');
      void btn.offsetWidth;
      btn.style.animationDelay = `${index * 0.08}s`;
      btn.classList.add('animate-in');
    });
  } else {
    menuBtns.forEach(btn => {
      btn.classList.remove('animate-in');
      btn.style.animationDelay = '';
    });
  }
}

function alterarQuantidade(produtoId, delta) {
  const produto = produtosPorId[produtoId];
  if (produto) {
    produto.quantidade = Math.max(0, produto.quantidade + delta);
    const quantSpan = document.getElementById(`quant-${produtoId}`);
    if (quantSpan) {
      quantSpan.textContent = produto.quantidade;
    }
    atualizarCarrinho();
    verificarQuantidadeProdutos();
  }
}

function normalizarString(str) {
  return str ? str.normalize("NFD").replace(/[\u0300-\u036f]/g, "").toLowerCase() : '';
}

function buscarProduto() {
  const isMobile = window.innerWidth <= 768;
  const searchInput = isMobile ? 
      document.getElementById('search-mobile-input') : 
      document.getElementById('search-desktop-input');
  
  if (!searchInput) return;
  
  const termo = searchInput.value.trim();
  const termoNormalizado = normalizarString(termo);
  const container = document.getElementById('product-container');
  if (!container) return;
  
  if (!termoNormalizado) {
      renderProducts(categoriaAtual);
      return;
  }

  const resultados = [];
  for (const categoria in produtos) {
    if (categoria !== 'todos' && Array.isArray(produtos[categoria])) {
      const produtosEncontrados = produtos[categoria].filter(produto => 
        normalizarString(produto.nome).includes(termoNormalizado)
      );
      resultados.push(...produtosEncontrados);
    }
  }
  
  container.innerHTML = '';
  
  if (resultados.length === 0) {
      container.innerHTML = '<p class="no-results">Nenhum produto encontrado</p>';
      return;
  }
  
  resultados.forEach(produto => {
      const div = document.createElement('div');
      div.className = 'product';
      div.style.backgroundColor = produto.cor;
      div.innerHTML = `
          <img src="${produto.imagem}" alt="${produto.nome}">
          <div class="product-title">${produto.nome}</div>
          <div class="price">${produto.preco}</div>
          <div class="quantity-controls">
              <button onclick="window.alterarQuantidade('${produto.id}', -1)">-</button>
              <span id="quant-${produto.id}">${produto.quantidade}</span>
              <button onclick="window.alterarQuantidade('${produto.id}', 1)">+</button>
          </div>
      `;
      container.appendChild(div);
  });
}

function mostrarCarrinho() {
  const carrinho = document.getElementById('carrinho');
  const lista = document.getElementById('lista-carrinho');
  if (!carrinho || !lista) return;
  
  lista.innerHTML = '';
  let temItensNoCarrinho = false;

  for (const produtoId in produtosPorId) {
    const prod = produtosPorId[produtoId];
    if (prod.quantidade > 0) {
      const item = document.createElement('li');
      item.textContent = `${prod.nome} - Quantidade: ${prod.quantidade}`;
      lista.appendChild(item);
      temItensNoCarrinho = true;
    }
  }

  carrinho.style.display = temItensNoCarrinho ? 'block' : 'none';
}

function atualizarCarrinho() {
  mostrarCarrinho();
}

function verificarQuantidadeProdutos() {
  let quantidadeTotal = 0;
  for (const produtoId in produtosPorId) {
    quantidadeTotal += produtosPorId[produtoId].quantidade;
  }
  const botao = document.getElementById('botaoFinalizar');
  if (botao) {
    botao.style.display = quantidadeTotal > 0 ? 'block' : 'none';
  }
  return quantidadeTotal;
}

function verificarQuantidadeCategoria(categoria) {
  let quantidadeCategoria = 0;
  if (produtos[categoria]) {
    produtos[categoria].forEach(produto => {
      quantidadeCategoria += produto.quantidade;
    });
  }

  const botao = document.getElementById('botaoFinalizar');
  if (botao) {
    botao.style.display = quantidadeCategoria > 0 ? 'block' : 'none';
  }
  return quantidadeCategoria;
}

function inicializarBotao() {
  const botao = document.getElementById('botaoFinalizar');
  if (botao) botao.style.display = 'none';
}

function finalizarCompra() {
  let quantidadeTotal = verificarQuantidadeProdutos();
  if (quantidadeTotal > 0) {
    finalizarCompraComDados();
  } else {
    alert('Adicione produtos ao carrinho antes de finalizar a compra!');
  }
}

function finalizarCompraComDados() {
  let produtosCarrinho = [];
  for (const produtoId in produtosPorId) {
    const produto = produtosPorId[produtoId];
    if (produto.quantidade > 0) {
      produtosCarrinho.push({
        nome: produto.nome,
        preco: produto.preco,
        quantidade: produto.quantidade,
        imagem: produto.imagem,
        id: produto.id
      });
    }
  }
  if (produtosCarrinho.length > 0) {
    sessionStorage.setItem('carrinho', JSON.stringify(produtosCarrinho));
    window.location.href = 'pages/checkout.html';
  } else {
    alert('Adicione produtos ao carrinho antes de finalizar a compra!');
  }
}

function salvarPedidosNoLocalStorage(pedidos) {
  localStorage.setItem('pedidos', JSON.stringify(pedidos));
}

function carregarPedidosDoLocalStorage() {
  const pedidosSalvos = localStorage.getItem('pedidos');
  return pedidosSalvos ? JSON.parse(pedidosSalvos) : null;
}

function calcularValorPedido(produtosPedido) {
  let total = 0;
  for (const categoria in produtosPedido) {
    produtosPedido[categoria].forEach(produtoId => {
      const produto = produtosPorId[produtoId];
      if (produto) {
        const valorNumerico = parseFloat(produto.preco.replace('R$', '').replace(',', '.').split(' ')[0]);
        total += valorNumerico;
      }
    });
  }
  return total;
}

function gerarPedido() {
  const categoriasDisponiveis = Object.keys(produtos).filter(cat => cat !== 'todos');
  const produtosNoPedido = {};

  const numCategorias = Math.min(3, Math.floor(Math.random() * categoriasDisponiveis.length) + 1);
  const categoriasSelecionadas = categoriasDisponiveis
    .sort(() => 0.5 - Math.random())
    .slice(0, numCategorias);

  categoriasSelecionadas.forEach(categoria => {
    const produtosCategoria = produtos[categoria];
    const numProdutos = Math.min(3, Math.floor(Math.random() * produtosCategoria.length) + 1);
    produtosNoPedido[categoria] = produtosCategoria
      .sort(() => 0.5 - Math.random())
      .slice(0, numProdutos)
      .map(p => p.id);
  });

  return {
    id: Math.floor(1000 + Math.random() * 9000),
    valor: calcularValorPedido(produtosNoPedido),
    data: new Date(Date.now() - 86400000 * Math.floor(Math.random() * 30)).toLocaleDateString('pt-BR'),
    status: ['Entregue', 'Pendente', 'Cancelado'][Math.floor(Math.random() * 3)],
    produtos: produtosNoPedido
  };
}

function formatarCategoria(categoria) {
  const categorias = {
    frutas: 'Frutas',
    legumes: 'Legumes',
    verduras: 'Verduras',
    outros: 'Outros'
  };
  return categorias[categoria] || categoria;
}

function renderizarPedidos() {
  const sectionPedidos = document.querySelector('.recent-orders');
  if (!sectionPedidos) return;
  
  const orderCards = sectionPedidos.querySelectorAll('.order-card');
  orderCards.forEach(card => card.remove());

  let pedidos = carregarPedidosDoLocalStorage();

  if (!pedidos || pedidos.length === 0) {
    pedidos = [];
    const numPedidos = Math.floor(Math.random() * 4) + 2;
    for (let i = 0; i < numPedidos; i++) {
      pedidos.push(gerarPedido());
    }
    salvarPedidosNoLocalStorage(pedidos);
  }

  pedidos.sort((a, b) => new Date(b.data.split('/').reverse().join('-')) - new Date(a.data.split('/').reverse().join('-')));

  pedidos.forEach(pedido => {
    const orderCard = document.createElement('div');
    orderCard.className = 'order-card';

    const header = document.createElement('p');
    header.textContent = `Pedido #${pedido.id} - R$ ${pedido.valor.toFixed(2).replace('.', ',')}`;
    orderCard.appendChild(header);

    const listaPrincipal = document.createElement('ul');
    listaPrincipal.className = 'lista-items';

    for (const categoria in pedido.produtos) {
      if (pedido.produtos[categoria].length > 0) {
        const categoriaItem = document.createElement('li');
        categoriaItem.textContent = formatarCategoria(categoria);

        const subLista = document.createElement('ul');

        pedido.produtos[categoria].forEach((produtoId, index) => {
          const produto = produtosPorId[produtoId];
          if (produto) {
            const produtoItem = document.createElement('li');
            produtoItem.textContent = `${index + 1}. ${produto.nome}`;
            subLista.appendChild(produtoItem);
          }
        });

        categoriaItem.appendChild(subLista);
        listaPrincipal.appendChild(categoriaItem);
      }
    }

    orderCard.appendChild(listaPrincipal);

    const footer = document.createElement('p');
    footer.innerHTML = `${pedido.data} - <span class="status-${pedido.status.toLowerCase()}">${pedido.status}</span>`;
    orderCard.appendChild(footer);

    sectionPedidos.appendChild(orderCard);
  });
}

document.addEventListener('DOMContentLoaded', function() {
  window.alterarQuantidade = alterarQuantidade;
  window.buscarProduto = buscarProduto;
  window.renderProducts = renderProducts;
  window.filtrarProdutos = filtrarProdutos;
  window.toggleMenu = toggleMenu;
  window.toggleMenuNavbar = toggleMenuNavbar;
  window.showCategory = showCategory;

  renderProducts(categoriaAtual);
  setActiveCategory('frutas');
  inicializarBotao();
  renderizarPedidos();
  initHeaderActions();

  document.getElementById('btnPerfil')?.addEventListener('click', function() {
    window.location.href = "pages/perfil.html";
  });

  document.getElementById('btnNovoPedido')?.addEventListener('click', function() {
    const pedidos = carregarPedidosDoLocalStorage() || [];
    pedidos.unshift(gerarPedido());
    salvarPedidosNoLocalStorage(pedidos);
    renderizarPedidos();
  });
});